exports[`test renders NoteList 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div
    bottom="110px"
    right="30px">
    <styled.div
        trigger={true}>
        <styled.div
            origin="95% 95%"
            zoom="in">
            <styled.div>
                <DelayRender
                    component={<NoteList />}
                    delay={1000}
                    props={
                        Object {
                            "height": "400px",
                            "notes": Array [
                              Object {
                                "text": "test",
                              },
                              Object {
                                "text": "test1",
                              },
                            ],
                          }
                    } />
                <styled.div>
                    <styled.input
                        onChange={[Function]}
                        onKeyPress={[Function]}
                        placeholder="Add note here"
                        type="text"
                        value="" />
                    <styled.div
                        bottom="0"
                        right="0">
                        <styled.button
                            active={false}
                            activeColor="hsl(163, 100%, 60%)"
                            bgColor="hsl(0, 0%, 20%)"
                            color="hsl(163, 100%, 20%)"
                            fontSize={40}
                            onClick={[Function]}>
                            <FaArrowRight />
                        </styled.button>
                    </styled.div>
                </styled.div>
            </styled.div>
        </styled.div>
    </styled.div>
</styled.div>,
  "nodes": Array [
    <styled.div
      bottom="110px"
      right="30px">
      <styled.div
            trigger={true}>
            <styled.div
                  origin="95% 95%"
                  zoom="in">
                  <styled.div>
                        <DelayRender
                              component={<NoteList />}
                              delay={1000}
                              props={
                                    Object {
                                          "height": "400px",
                                          "notes": Array [
                                            Object {
                                              "text": "test",
                                            },
                                            Object {
                                              "text": "test1",
                                            },
                                          ],
                                        }
                              } />
                        <styled.div>
                              <styled.input
                                    onChange={[Function]}
                                    onKeyPress={[Function]}
                                    placeholder="Add note here"
                                    type="text"
                                    value="" />
                              <styled.div
                                    bottom="0"
                                    right="0">
                                    <styled.button
                                          active={false}
                                          activeColor="hsl(163, 100%, 60%)"
                                          bgColor="hsl(0, 0%, 20%)"
                                          color="hsl(163, 100%, 20%)"
                                          fontSize={40}
                                          onClick={[Function]}>
                                          <FaArrowRight />
                                    </styled.button>
                              </styled.div>
                        </styled.div>
                  </styled.div>
            </styled.div>
      </styled.div>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <NoteEdit
        active={true}
        notes={
                Array [
                        Object {
                          "text": "test",
                        },
                        Object {
                          "text": "test1",
                        },
                      ]
        }
        onNewNote={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": NoteEdit {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "active": true,
          "notes": Array [
            Object {
              "text": "test",
            },
            Object {
              "text": "test1",
            },
          ],
          "onNewNote": [Function],
        },
        "refs": Object {},
        "state": Object {
          "initiated": true,
          "newNote": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div
          bottom="110px"
          right="30px">
          <styled.div
                    trigger={true}>
                    <styled.div
                              origin="95% 95%"
                              zoom="in">
                              <styled.div>
                                        <DelayRender
                                                  component={<NoteList />}
                                                  delay={1000}
                                                  props={
                                                            Object {
                                                                      "height": "400px",
                                                                      "notes": Array [
                                                                        Object {
                                                                          "text": "test",
                                                                        },
                                                                        Object {
                                                                          "text": "test1",
                                                                        },
                                                                      ],
                                                                    }
                                                  } />
                                        <styled.div>
                                                  <styled.input
                                                            onChange={[Function]}
                                                            onKeyPress={[Function]}
                                                            placeholder="Add note here"
                                                            type="text"
                                                            value="" />
                                                  <styled.div
                                                            bottom="0"
                                                            right="0">
                                                            <styled.button
                                                                      active={false}
                                                                      activeColor="hsl(163, 100%, 60%)"
                                                                      bgColor="hsl(0, 0%, 20%)"
                                                                      color="hsl(163, 100%, 20%)"
                                                                      fontSize={40}
                                                                      onClick={[Function]}>
                                                                      <FaArrowRight />
                                                            </styled.button>
                                                  </styled.div>
                                        </styled.div>
                              </styled.div>
                    </styled.div>
          </styled.div>
</styled.div>,
        "_debugID": 3,
        "_renderedOutput": <styled.div
          bottom="110px"
          right="30px">
          <styled.div
                    trigger={true}>
                    <styled.div
                              origin="95% 95%"
                              zoom="in">
                              <styled.div>
                                        <DelayRender
                                                  component={<NoteList />}
                                                  delay={1000}
                                                  props={
                                                            Object {
                                                                      "height": "400px",
                                                                      "notes": Array [
                                                                        Object {
                                                                          "text": "test",
                                                                        },
                                                                        Object {
                                                                          "text": "test1",
                                                                        },
                                                                      ],
                                                                    }
                                                  } />
                                        <styled.div>
                                                  <styled.input
                                                            onChange={[Function]}
                                                            onKeyPress={[Function]}
                                                            placeholder="Add note here"
                                                            type="text"
                                                            value="" />
                                                  <styled.div
                                                            bottom="0"
                                                            right="0">
                                                            <styled.button
                                                                      active={false}
                                                                      activeColor="hsl(163, 100%, 60%)"
                                                                      bgColor="hsl(0, 0%, 20%)"
                                                                      color="hsl(163, 100%, 20%)"
                                                                      fontSize={40}
                                                                      onClick={[Function]}>
                                                                      <FaArrowRight />
                                                            </styled.button>
                                                  </styled.div>
                                        </styled.div>
                              </styled.div>
                    </styled.div>
          </styled.div>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <NoteEdit
    active={true}
    notes={
        Array [
            Object {
              "text": "test",
            },
            Object {
              "text": "test1",
            },
          ]
    }
    onNewNote={[Function]} />,
}
`;
