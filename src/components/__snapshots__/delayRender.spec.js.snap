exports[`test renders DelayRender 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <section
        notes={
            Array [
                Object {
                  "text": "test",
                },
              ]
        } />
</div>,
  "nodes": Array [
    <div>
      <section
            notes={
                  Array [
                        Object {
                          "text": "test",
                        },
                      ]
            } />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <delayRender
        component={<section />}
        delay={1000}
        props={
                Object {
                        "notes": Array [
                          Object {
                            "text": "test",
                          },
                        ],
                      }
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": delayRender {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "component": <section />,
          "delay": 1000,
          "props": Object {
            "notes": Array [
              Object {
                "text": "test",
              },
            ],
          },
        },
        "refs": Object {},
        "state": Object {
          "props": Object {
            "notes": Array [
              Object {
                "text": "test",
              },
            ],
          },
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <section
                    notes={
                              Array [
                                        Object {
                                          "text": "test",
                                        },
                                      ]
                    } />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <section
                    notes={
                              Array [
                                        Object {
                                          "text": "test",
                                        },
                                      ]
                    } />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <delayRender
    component={<section />}
    delay={1000}
    props={
        Object {
            "notes": Array [
              Object {
                "text": "test",
              },
            ],
          }
    } />,
}
`;
