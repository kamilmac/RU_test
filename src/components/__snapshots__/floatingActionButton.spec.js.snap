exports[`test renders Fab 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.button
    onClick={[Function]}>
    <styled.div
        zoom="out">
        <styled.div
            center={true}>
            <styled.span>
                <MdChatBubble />
            </styled.span>
        </styled.div>
    </styled.div>
    <styled.div
        rotate="in">
        <styled.div
            center={true}>
            <styled.span>
                <MdClose />
            </styled.span>
        </styled.div>
    </styled.div>
</styled.button>,
  "nodes": Array [
    <styled.button
      onClick={[Function]}>
      <styled.div
            zoom="out">
            <styled.div
                  center={true}>
                  <styled.span>
                        <MdChatBubble />
                  </styled.span>
            </styled.div>
      </styled.div>
      <styled.div
            rotate="in">
            <styled.div
                  center={true}>
                  <styled.span>
                        <MdClose />
                  </styled.span>
            </styled.div>
      </styled.div>
</styled.button>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <fab
        active={true}
        onActivate={[Function]}
        onDeactivate={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "active": true,
          "onActivate": [Function],
          "onDeactivate": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.button
          onClick={[Function]}>
          <styled.div
                    zoom="out">
                    <styled.div
                              center={true}>
                              <styled.span>
                                        <MdChatBubble />
                              </styled.span>
                    </styled.div>
          </styled.div>
          <styled.div
                    rotate="in">
                    <styled.div
                              center={true}>
                              <styled.span>
                                        <MdClose />
                              </styled.span>
                    </styled.div>
          </styled.div>
</styled.button>,
        "_debugID": 2,
        "_renderedOutput": <styled.button
          onClick={[Function]}>
          <styled.div
                    zoom="out">
                    <styled.div
                              center={true}>
                              <styled.span>
                                        <MdChatBubble />
                              </styled.span>
                    </styled.div>
          </styled.div>
          <styled.div
                    rotate="in">
                    <styled.div
                              center={true}>
                              <styled.span>
                                        <MdClose />
                              </styled.span>
                    </styled.div>
          </styled.div>
</styled.button>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <fab
    active={true}
    onActivate={[Function]}
    onDeactivate={[Function]} />,
}
`;
