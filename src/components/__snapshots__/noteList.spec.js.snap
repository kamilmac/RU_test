exports[`test renders NoteList 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <styled.h2
        textColor="black">
        test
    </styled.h2>
    <styled.h2
        textColor="black">
        test1
    </styled.h2>
</div>,
  "nodes": Array [
    <div>
      <styled.h2
            textColor="black">
            test
      </styled.h2>
      <styled.h2
            textColor="black">
            test1
      </styled.h2>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <noteList
        notes={
                Array [
                        Object {
                          "text": "test",
                        },
                        Object {
                          "text": "test1",
                        },
                      ]
        }
        textColor="black" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "notes": Array [
            Object {
              "text": "test",
            },
            Object {
              "text": "test1",
            },
          ],
          "textColor": "black",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <styled.h2
                    textColor="black">
                    test
          </styled.h2>
          <styled.h2
                    textColor="black">
                    test1
          </styled.h2>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <styled.h2
                    textColor="black">
                    test
          </styled.h2>
          <styled.h2
                    textColor="black">
                    test1
          </styled.h2>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <noteList
    notes={
        Array [
            Object {
              "text": "test",
            },
            Object {
              "text": "test1",
            },
          ]
    }
    textColor="black" />,
}
`;
